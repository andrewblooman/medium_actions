name: Docker Build, Security Scan, and Terraform Plan

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Add this to allow manual trigger

jobs:
  # Step 1: Build Docker image
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t my-docker-image .
      - name: Save Docker image as artifact
        run: docker save my-docker-image | gzip > my-docker-image.tar.gz
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: my-docker-image.tar.gz

  # Step 2: Docker Image Security Scan with Trivy
  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: build-docker-image  # Ensure Docker image is built first
    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v3
      with:
        name: docker-image
    - name: Load Docker image
      run: gunzip -c my-docker-image.tar.gz | docker load
    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'my-docker-image'

  # Step 3: Run Terraform Plan
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: trivy-scan  # Wait for Docker scan to complete
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Run Terraform Init and Plan
      - name: Terraform Init
        run: |
          cd terraform
          terraform init -input=false

      - name: Terraform Plan
        run: |
          terraform plan -out=plan.tfplan

      # Convert Terraform Plan to JSON and Run Checkov
      - name: Terraform Show (convert plan to JSON)
        run: terraform show -json plan.tfplan > plan.tfplan.json

      - name: Run Checkov scan on Terraform plan
        run: checkov -f plan.tfplan.json

      # Upload plan.tfplan.json as an artifact
      - name: Upload Terraform plan artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-json
          path: terraform/plan.tfplan.json

# Step 4: Checkov Scan
  checkov-scan:
    name: Checkov Scan
    runs-on: ubuntu-latest
    needs: terraform-plan  # Wait for Terraform Plan to complete
    steps:
      - name: Download Terraform plan artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan-json

      # Install Checkov
      - name: Install Checkov
        run: pip install checkov

      # Run Checkov scan on the downloaded Terraform plan JSON
      - name: Run Checkov scan
        run: checkov -f terraform/plan.tfplan.json

          
 # Step 5: Manual Deployment (Terraform Apply)
  terraform-apply:
    name: Terraform Apply (Manual Step)
    runs-on: ubuntu-latest
    needs: checkov-scan
    if: github.event_name == 'workflow_dispatch'  # Ensure this only runs manually
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply --auto-approve